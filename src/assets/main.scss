@import 'bootstrap/scss/functions';
@import 'bootstrap/scss/variables';
@import 'bootstrap/scss/mixins';

// Custom color variables
$custom-colors: (
  'primary': $primary,
  'secondary': $secondary,
  'success': $success,
  'info': $info,
  'warning': $warning,
  'danger': $danger,
  'light': $light,
  'dark': $dark
);

// Merge the maps
$theme-colors: map-merge($theme-colors, $custom-colors);

// Light theme variables
$light-theme: (
  'body-bg': $white,
  'body-color': $dark,
  'border-color': $gray-300,
  'light': $light,
  'dark': $dark,
  'accent-color': #3498db,
  'text-muted': $gray-600,
  'form-disabled-bg': $gray-200,
  'form-disabled-color': $gray-600
);

// Dark theme variables
$dark-theme: (
  'body-bg': #1a1a1a,
  'body-color': $light,
  'border-color': $gray-700,
  'light': $gray-900,
  'dark': $black,
  'accent-color': #2ecc71,
  'text-muted': #a0a0a0,
  'form-disabled-bg': lighten($gray-900, 5%),
  'form-disabled-color': $gray-600
);

// Import the rest of Bootstrap
@import 'bootstrap/scss/bootstrap';

@mixin color-scheme-styles($theme) {
  --bs-body-bg: #{map-get($theme, 'body-bg')};
  --bs-body-color: #{map-get($theme, 'body-color')};
  --bs-border-color: #{map-get($theme, 'border-color')};
  --bs-light: #{map-get($theme, 'light')};
  --bs-dark: #{map-get($theme, 'dark')};
  --bs-accent-color: #{map-get($theme, 'accent-color')};
  --bs-text-muted: #{map-get($theme, 'text-muted')};
  --bs-form-disabled-bg: #{map-get($theme, 'form-disabled-bg')};
  --bs-form-disabled-color: #{map-get($theme, 'form-disabled-color')};

  @each $color, $value in $theme-colors {
    --bs-#{$color}: #{$value};
  }

  // Increase specificity and use !important to override Bootstrap defaults
  body {
    .bg-light {
      background-color: var(--bs-light) !important;
    }
    .bg-dark {
      background-color: var(--bs-dark) !important;
    }
    .text-light {
      color: var(--bs-light) !important;
    }
    .text-dark {
      color: var(--bs-dark) !important;
    }
    .text-muted {
      color: var(--bs-text-muted) !important;
    }
    .card {
      border-color: var(--bs-border-color);
    }
    .form-control:disabled,
    .form-control[readonly],
    .form-select:disabled {
      background-color: var(--bs-form-disabled-bg);
      color: var(--bs-form-disabled-color);
      border-color: var(--bs-border-color);
    }
    .form-control:disabled::placeholder,
    .form-control[readonly]::placeholder,
    .form-select:disabled {
      color: var(--bs-form-disabled-color);
    }
    .table,
    th,
    td {
      border: 1px solid var(--bs-border-color);
      border-collapse: collapse;
    }
    .table th {
      color: var(--bs-body-color);
      font-weight: 600;
    }
    .table > :not(caption) > * > * {
      color: var(--bs-body-color);
      border-bottom-color: var(--bs-border-color);
    }
    .input-group-text {
      color: var(--bs-body-color);
      background-color: var(--bs-input-bg);
      border-color: var(--bs-border-color);
    }
    .custom-bg-light {
      background-color: var(--bs-light) !important;
    }
  }
}

// Apply light theme by default
:root {
  @include color-scheme-styles($light-theme);
}

// Dark mode styles
@media (prefers-color-scheme: dark) {
  :root {
    @include color-scheme-styles($dark-theme);
  }
}

// Styles that don't change based on color scheme
.Navigation {
  padding: 0.5rem 0;
  position: sticky;
  top: 0;
  z-index: 1000;
}

.navbar {
  background-color: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: 0 0 1rem 1rem;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
}

.navbar-nav {
  gap: 0.5rem;
}

.nav-link {
  display: flex;
  align-items: center;
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  transition: all 0.3s ease;
  color: var(--bs-body-color);

  &:hover,
  &.active-route {
    transform: translateY(-2px);
  }

  .nav-icon {
    font-size: 1.2rem;
    margin-right: 0.5rem;
    transition:
      transform 0.3s ease,
      color 0.3s ease;
    color: var(--icon-color, inherit);
  }

  .nav-text {
    font-size: 0.9rem;
    font-weight: 600;
    opacity: 0.8;
    transition: opacity 0.3s ease;
  }

  &:hover {
    .nav-icon {
      transform: scale(1.1) rotate(15deg);
    }
    .nav-text {
      opacity: 1;
    }
  }
}

.Navigation__logo {
  height: 40px;
  width: 40px;
  transition: transform 0.3s ease;

  &:hover {
    transform: scale(1.1);
  }
}

@media (max-width: 991px) {
  .navbar-nav {
    background-color: rgba(255, 255, 255, 0.05);
    border-radius: 0.5rem;
    padding: 0.5rem;
  }
}

// Hover effect styles
.hover-effect {
  transition:
    transform 0.3s ease-in-out,
    box-shadow 0.3s ease-in-out;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
}

// Developer info styles
.developer-info {
  background-color: var(--bs-body-bg);
  border: 1px solid var(--bs-border-color);
  color: var(--bs-body-color);
  transition: all 0.3s ease;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
}

.developer-link {
  color: var(--bs-primary);
  transition: color 0.3s ease;

  &:hover {
    color: var(--bs-link-hover-color);
  }
}

// Heart icon animation
.heart-icon {
  display: inline-block;
  animation: heartbeat 1.5s ease-in-out infinite;
}

@keyframes heartbeat {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

// Accordion styles
.accordion-button:not(.collapsed) {
  background-color: #007bff;
  color: white;
}

.accordion-button:focus {
  box-shadow: none;
  border-color: rgba(0, 0, 0, 0.125);
}

.accordion-button:not(.collapsed)::after {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
}

// Card hover effect
.card {
  transition: transform 0.3s ease-in-out;

  &:hover {
    transform: translateY(-10px);
  }
}

// Strategy card styles
.strategy-card {
  cursor: pointer;
  transition:
    transform 0.2s,
    box-shadow 0.2s;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  &:active {
    transform: translateY(-2px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
}

// Slim scrollbar styles
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: var(--bs-body-bg);
}

::-webkit-scrollbar-thumb {
  background: var(--bs-body);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--bs-body);
}

// For Firefox
* {
  scrollbar-width: thin;
  scrollbar-color: var(--bs-body) var(--bs-body-bg);
  outline: none;
}

// MTM styles
.MTM {
  position: sticky;
  top: 0;
  z-index: 1000;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
}

// TabContent styles
.TabContent {
  height: 500px;
}

.table-responsive {
  height: 500px;
  overflow: scroll;
}

// Sparkle animation
@keyframes sparkle {
  0% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
  }

  50% {
    transform: scale(1.2) rotate(10deg);
    opacity: 0.7;
  }

  100% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
  }
}

.sparkle-icon {
  animation: sparkle 2s infinite;
}

// Styles for better visual appeal
.card,
.btn,
.form-control,
.input-group-text {
  transition: all 0.3s ease;
}

.btn-primary {
  background-color: var(--bs-accent-color);
  border-color: var(--bs-accent-color);

  &:hover,
  &:focus {
    background-color: darken(map-get($light-theme, 'accent-color'), 10%);
    border-color: darken(map-get($light-theme, 'accent-color'), 10%);
  }
}

.form-control:focus,
.btn:focus {
  box-shadow: 0 0 0 0.2rem rgba(map-get($light-theme, 'accent-color'), 0.25);
}

// Subtle background pattern
body {
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.05) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(0, 0, 0, 0.05) 1px, transparent 1px);
  background-size: 20px 20px;
}

body.dark-mode {
  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
}

// Chat container styles
.chat-container {
  height: 70vh;
  display: flex;
  flex-direction: column;
}

.chat-messages {
  flex-grow: 1;
  max-height: calc(70vh - 100px);
}

.typing-indicator {
  display: inline-block;
  width: 50px;
}

.typing-indicator span {
  height: 10px;
  width: 10px;
  float: left;
  margin: 0 1px;
  background-color: #6c757d;
  display: block;
  border-radius: 50%;
  opacity: 0.4;
  animation: blink 1s infinite;
}

.typing-indicator span:nth-of-type(2) {
  animation-delay: 0.2s;
}

.typing-indicator span:nth-of-type(3) {
  animation-delay: 0.4s;
}

@keyframes blink {
  0% {
    opacity: 0.4;
  }
  20% {
    opacity: 1;
  }
  100% {
    opacity: 0.4;
  }
}

.user-image {
  max-width: 100%;
  max-height: 200px;
  object-fit: contain;
  margin-bottom: 10px;
}

.chat-input {
  border-top: 1px solid #dee2e6;
}

// Navigation and Notification Area Styles
.notification-area {
  background-color: #f8f9fa;
  border-radius: 20px;
  padding: 0.5rem 1rem;
  transition: all 0.3s ease;
}

.notification-icon {
  font-size: 1.2rem;
  color: #6c757d;
  transition: all 0.3s ease;

  &.has-notification {
    color: #ffc107;
    animation: pulse 2s infinite;
  }
}

.notification-message {
  max-width: 200px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #6c757d;
  transition: all 0.3s ease;

  &.show-message {
    color: #212529;
    font-weight: bold;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}
